#EXERCISE 7

	## Set the working directory to the exercise 7 file

setwd('/pathway/IBC_Exercise_07/')

	## 1) Write a function that returns the odd rows of any
	   ## dataframe passed as an argument

        ## "y" is the data frame to analyze as an argument
        ## oddrow is the function which print all the odd rows from the data frame

y <- data.frame(x = 1:7, y = 11:17, z = c("one", "uno", "two", "dos", "three", "tres", "cuatro"))

oddrow <- function(y) {
  rows <- x[c(TRUE, FALSE),]
  return(rows)
}

	## 2) Repeat a subset of last weekâ€™s exercise, but write functions to accomplish these tasks.

	## 2.1) return the number of observations for a given species included in the data set
	   ## function that print a table with the name of the specie and the number of observation (row) of each one

species <- function(x) 
{
  Seto <- x[x$Species == "setosa", ]
  setosa <- nrow(Seto) # setosa observation
  Vers <- x[x$Species == "versicolor", ]
  versicolor <- nrow(Vers) # versicolor observations
  Virg <- x[x$Species == "virginica", ]
  virginica <- nrow(Virg) # virginica observation
  Names <- c("Setosa", "Versicolor", "Virginica")
  Observations <- c(setosa, versicolor, virginica)
  Table <- data.frame(cbind(Names, Observations))
  return(Table)
}

	## 2.2) return a dataframe for flowers with Sepal.Width greater than a value specified by 
           ## the function user
	
	## "y" is the Sepal.Width that the user has to determinated

y <- 2 # Sepal.Wilth example  

Sepal_Width <- function(y) {
  z <- x[x$Sepal.Width > y,]
  Width <- data.frame(z)
  return(Width)
} 

	## 2.3) write the data for a given species to a comma-delimited file with the given species 
           ## name as the file name; Hint: look at paste() to add the .csv extension to your 
           ## file in the for-loop.

Data_Species <- function(x) {
  Set <- x[x$Species == "setosa", ]
  Setosa <- write.csv(Set, file = "Setosa.csv")
  Ver <- x[x$Species == "versicolor", ]
  Versicolor <- write.csv(Ver, file = "Versicolor.csv")
  Vir <- x[x$Species == "virginica", ]
  Virginica <- write.csv(Vir, file = "Virginica.csv")
}




try to fixing

Data_Species <- function(x) {
  for(i in x) {
    if(i=="setosa") {
   paste0(i) <- subset(x, x$Species == paste0(i).csv)
    }
    if(i=="versicolor") {
   paste0(i) <- subset(x, x$Species == paste0(i).csv)
    }
    if(i=="virginica") {
   paste0(i) <- subset(x, x$Species == paste0(i).csv)
    }
  }
}
   
   Setosa = "setosa"
    Set <- x$Species
      filter(x, filter = "setosa")
    paste0("Specie-", Setosa, ".csv")
  }
}
  Set <- x[x$Species == "setosa", ]
  Setosa <- write.csv(Set, file = "Setosa.csv")
  Ver <- x[x$Species == "versicolor", ]
  Versicolor <- write.csv(Ver, file = "Versicolor.csv")
  Vir <- x[x$Species == "virginica", ]
  Virginica <- write.csv(Vir, file = "Virginica.csv")
}


i <- x
b <- function(i) {
  for (i in x) {
  a <- i[x$Species == "setosa"] }
  a2 <- write.csv(a, file = "Setosa.csv")
  return(a2)
}




species <- function(filename) {
  for (i in x$Species) {
  if(i == "setosa") {
    Set <- x[x$Species == "setosa", ]
    Setosa <- write.csv(Set, file = "Setosa.csv") }
    return(Setosa)
    if(i =="versicolor") {
    Ver <- x[x$Species == "versicolor", ]
    Versicolor <- write.csv(Ver, file = "Versicolor.csv") }
    return(Versicolor)
    if(i == "virginica") {
    Vir <- x[x$Species == "virginica", ]
    Virginica <- write.csv(Vir, file = "Virginica.csv") }
    return(Virginica)
  }
}
    
    
  Set <- x[x$Species == "setosa", ]
  Set2 <- paste(Set, sep = ",", collapse = NULL)
  Ver <- x[x$Species == "versicolor", ]
  Ver2 <- paste(Ver, sep = ",", collapse = NULL)
  Vir <- x[x$Species == "virginica", ]
  Vir2 <- paste(Vir, sep = ",", collapse = NULL)
  return(c(Set2, Ver2, Vir2))
  }
}





for (i in 1:150) {
  write.csv(x, [,,,,i], "setosa.i.csv")
}

